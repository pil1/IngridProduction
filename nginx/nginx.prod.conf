# Production Nginx configuration for info.onbb.ca
server {
    listen 80;
    server_name info.onbb.ca;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Hide nginx version
    server_tokens off;

    # Root directory and index
    root /usr/share/nginx/html;
    index index.html index.htm;

    # Charset
    charset utf-8;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Brotli compression (if enabled in nginx)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/xml image/svg+xml application/x-font-ttf image/vnd.microsoft.icon application/x-font-opentype application/json font/eot application/vnd.ms-fontobject application/javascript font/otf application/xml application/xhtml+xml text/javascript application/x-javascript text/plain application/x-font-truetype application/xml+rss image/x-icon font/opentype text/css image/x-win-bitmap;

    # Main location block - SPA routing
    location / {
        try_files $uri $uri/ /index.html;

        # Security headers for HTML
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://teyivlpjxmpitqaqmucx.supabase.co; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://teyivlpjxmpitqaqmucx.supabase.co wss://teyivlpjxmpitqaqmucx.supabase.co; frame-ancestors 'none';" always;
    }

    # Static assets with long-term caching
    location ~* \.(?:css|js|map|json)$ {
        expires 1y;
        access_log off;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";

        # Enable CORS for fonts and assets
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
    }

    # Images and media files
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|webp|htc|woff|woff2|ttf|eot)$ {
        expires 1M;
        access_log off;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";

        # Enable CORS for fonts
        add_header Access-Control-Allow-Origin "*";
    }

    # API proxy for Supabase (if needed for additional security)
    location /api/ {
        # Remove /api prefix and proxy to Supabase
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass https://teyivlpjxmpitqaqmucx.supabase.co;
        proxy_set_header Host teyivlpjxmpitqaqmucx.supabase.co;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        # Timeout settings
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
        expires 1d;
    }

    # Favicon
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        expires 1M;
    }

    # Security - Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to backup and config files
    location ~* (?:\.(?:bak|conf|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Logging
    access_log /var/log/nginx/infotrac_access.log;
    error_log /var/log/nginx/infotrac_error.log;

    # Rate limiting (adjust as needed)
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    # Apply rate limiting to API calls
    location /api/auth/ {
        limit_req zone=login burst=5 nodelay;
        proxy_pass https://teyivlpjxmpitqaqmucx.supabase.co;
    }
}

# Redirect HTTP to HTTPS (if SSL is configured)
# server {
#     listen 80;
#     server_name info.onbb.ca;
#     return 301 https://$server_name$request_uri;
# }